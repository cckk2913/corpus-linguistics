{"id":232712037,"title":"#分享 R語言-時間資料處理","content":"在R資料處理之中，時常會需要遇到時間格式的處理\n\n實驗數據、股市資料、氣候資訊隨著時間不斷的流逝\n\n各式資料也不斷的生成的情況下時間的判讀就顯得重要\n\n多數時候取得的時間資料就是一長串的數字\n\n如何讓程式讀取時間資料以及對時間資料的處理是今天這文章的重點\n\n因文章包含大量範例不方便在Dcard上展示\n\n有興趣的可以參考下列連結\n\nhttps://hackmd.io/@LHB-0222/Rdate\n \n目前已開放hackmd的協作功能\n若有興趣或是覺得需要補充的都可以前往編輯\n\n簡單目錄 :\n時間資料處理\n取得時間資訊\n    取得特定日期或時間資訊\n    單日期之文字格式轉換\n包含時間資料之文字格式轉換\n時間格式之運算\nlubridate套件更靈活處理R時間格式\n    判斷日期日期\n    簡單的函數來獲取日期或時間物件\n    時間的四捨五入與條件捨去、進位\n\n*****************************************\n\n# 取得時間資訊\n```R=\nSys.Date()  #當前日期  lubridate::today()     \ndate()      #當前系統日期和時間  \nSys.time()  #當前系統日期和時間  lubridate::now()\nSys.timezone() #有關時區的信息將返回當前時區的名稱\n```\n:::success\n[1] \"2019-12-13\"\n[1] \"Fri Dec 13 21:50:58 2019\"\n[1] \"2019-12-13 21:52:04 CST\"\n[1] \"Asia/Taipei\"\n:::\n\n```R=+\nhead(OlsonNames()) #取得有關時區的信息、時區的名稱\n```\n\n:::success\n[1] \"Africa/Abidjan\"     \"Africa/Accra\"       \"Africa/Addis_Ababa\" \"Africa/Algiers\" \n[5] \"Africa/Asmara\"      \"Africa/Asmera\"\n:::\n\n## 取得特定日期或時間資訊\n:::danger\nformat(date,format):\n:::\n\n```R=\n#輸出年份：\nformat(Sys.Date(),format=\"%Y\")   \nformat(Sys.Date(),format=\"%y\")  \n#輸出月份：\nformat(Sys.Date(),format=\"%b\")   \nformat(Sys.Date(),format=\"%B\")  \nformat(Sys.Date(),format=\"%m\") \n#輸出星期：\nformat(Sys.Date(),format=\"%A\") \nformat(Sys.Date(),format=\"%a\") \n#摻雜文字輸出：  \nformat(Sys.Date(),format=\"%Y年%m月%d日\")  \n```\n:::success\n#輸出年份：\n[1] \"2019\"\n[1] \"17\"\n[1] \"19\"\n\n#輸出月份：\n[1] \"十二月\"\n[1] \"十二月\"\n[1] \"12\"\n\n#輸出星期：\n[1] \"星期五\"\n[1] \"週五\"\n\n#摻雜文字輸出：  \n[1] \"2019年12月13日\"\n:::\n\n也可以使用其他內置函數處理\n\n```R=\nweekdays(Sys.Date())  #取得日期物件的星期資料\nmonths(Sys.Date())    #取得日期物件的月份      \ndays(Sys.Date())      #取得日期物件日期\nquarters(Sys.Date())  #取得日期物件的季度\n```\n\n# 單日期之文字格式轉換\n:::danger\nas.Date(x, format)\n:::\n\n\nformat參數用於指定輸入的格式，常用的日期格式符號是：\n|％y|兩個數字表示的年份（00-99），不帶世紀，例如，數值是18，格式％y，表示2018年|\n|---|---|\n|％Y|四位數字表示的年份（0000-9999）|\n|％m|兩個數字的月份，取值範圍是01-12，或1-12|\n|％d|月份中的天，取值範圍是01-31|\n|％e|月份中的天，取值範圍是1-31|\n|％b|縮寫的月份（Jan，Feb，Mar等）|\n|％B|英語月份全名（January、February 、March等）|\n|％a|縮寫的星期名（Mon、Tue、Wed、Thur、Fri、Sat、Sun）|\n|％A|星期全名|\n\n```R=\nas.Date('2019-12-02', '%Y-%m-%d')\nas.Date('12/02 2019', '%m/%d %Y')\n```\n:::success\n[1] \"2019-12-02\"\n[1] \"2019-12-02\"\n:::\n\n# 包含時間資料之文字格式轉換\n:::danger\nas.POSIXlt(x, format)\nas.POSIXct(x, format)\n:::\n**POSIXlt** 是以列表的形式分別儲存年、月、日、时、分、秒資料\n**POSIXct** 則是以1970年1月1號開始計算過了幾秒，如果是負數，則是1970-01-01年以前；\n正數則是1970年以後。\n\n| ％H|小時（24小時制）| \n|---|---|\n|％I|小時（12小時制）|\n|％p|對於12小時制，指定上午（AM）或下午（PM）|\n|％M|分鐘|\n|％S|秒|\n```R=\nas.POSIXlt('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\")\nas.POSIXct('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\")\n```\n:::success\n[1] \"2019-12-13 22:12:00 CST\"\n[1] \"2019-12-13 22:12:00 CST\"\n:::\n\n比如2019/12/13 22:12:00相比於1970年1月1號經過了1576246320秒\n```R=+\nunclass(as.POSIXct('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\"))\n```\n:::success\n[1] 1576246320\nattr(,\"tzone\")\n[1] \"\"\n:::\n```R=+\nunclass(as.POSIXlt('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\"))\n```\n:::success\n$sec\n[1] 0\n\n$min\n[1] 12\n\n$hour\n[1] 22\n\n$mday\n[1] 13\n\n$mon\n[1] 11\n\n$year\n[1] 119\n\n$wday\n[1] 5\n\n$yday\n[1] 346\n\n$isdst\n[1] 0\n\n$zone\n[1] \"CST\"\n\n$gmtoff\n[1] NA\n:::\n\n# 時間格式之運算\n不同時間格式間可以進行相減但無法進行相加\n```R=\nD1 <- as.POSIXlt('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\")\nD2 <- as.POSIXlt('2019/12/13 10:12:00', format=\"%Y/%m/%d %H:%M:%S\")\nD3 <- as.POSIXct('2019/12/13 22:12:00', format=\"%Y/%m/%d %H:%M:%S\")\nD4 <- as.POSIXct('2019/12/13 10:12:00', format=\"%Y/%m/%d %H:%M:%S\")\n\nD1-D2\nD1-D3\nD1-D4\n\n```\n:::success\nTime difference of 12 hours \nTime difference of 0 secs\nTime difference of 12 hours\n:::\n\n```R=+\nD1+D4\nD1+D2\n```\n:::success\nError in `+.POSIXt`(D1, D4) : \n  binary '+' is not defined for \"POSIXt\" objects\nError in `+.POSIXt`(D1, D2) : \n  binary '+' is not defined for \"POSIXt\" objects\n:::\n\n而加上數字則為秒數增加\n\n`D1 + 1` \n[1] \"2019-12-13 22:12:01 CST\"\n`D1 + 60` \n[1] \"2019-12-13 22:36:00 CST\"\n`D1 + 60 * 60`\n[1] \"2019-12-13 23:12:00 CST\"\n`D1 + 60 * 60 * 24`\n[1] \"2019-12-14 22:12:00 CST\"\n`D1 + 60 * 60 * 24 * 30`\n[1] \"2020-01-12 22:12:00 CST\"\n\n時間格式間計算時間差可以使用difftime()\n:::danger\ndifftime(time1, time2, tz,units = c(\"auto\", \"secs\", \"mins\", \"hours\",\"days\", \"weeks\"))\n:::\n\n```R=\nD1 <- as.Date(\"2019/12/16\")\nD2 <- as.Date(\"2012/11/17\")\ndifftime(D1, D2, units =\"secs\")\n```\n:::success\nTime difference of 223344000 secs\n:::\n\n# lubridate套件更靈活處理R時間格式\n\n```R=\ninstall.packages(\"lubridate\") #安裝套件\nlibrary(lubridate) #讀取套件\n```\nlubridate主要有判斷、提取、修改等功能\n\n## 判斷日期日期\nlubridate以y代表yeard, m代表month, d代表day,透過y-m-d的不同排序來判斷時間格式\n```R=+\nymd(\"2019-12-16\")\nymd(\"2019/12/16\")\nymd(\"2019_12_16\")\nymd(\"19_12_16\")\nmdy(\"121619\")\ndmy(161219)\n```\n:::success\n[1] \"2019-12-16\"\n[1] \"2019-12-16\"\n[1] \"2019-12-16\"\n[1] \"2019-12-16\"\n[1] \"2019-12-16\"\n[1] \"2019-12-16\"\n:::\n\n再搭配h表示小時，m為分鐘與s為秒可以組成dmy_hms、ymd_hms等函數來判斷包含時間之格式\n```R=+\n ymd_hms(\"2019_12_16 12:01:56\")\n ymd_hm(\"2019_12_16 12:01\")\n ymd_h(\"2019_12_16 12\")\n mdy_hms(\"121619 12:01:56\")\n```\n:::success\n[1] \"2019-12-16 12:01:56 UTC\"\n[1] \"2019-12-16 12:01:00 UTC\"\n[1] \"2019-12-16 12:00:00 UTC\"\n[1] \"2019-12-16 12:01:56 UTC\"\n:::\n\n## 簡單的函數來獲取日期或時間物件\n\n:::danger\nyear()  #取得年份\nmonth() #取得月份\nmday()  #取的日期\nhour()  #取得小時數\nminute() #取得分鐘數\nsecond() #取得秒數\n:::\n\n```R=\nD5 <- mdy_hms(\"121619 12:01:56\")\nyear(D5)  #取得年份\nmonth(D5) #取得月份\nmday(D5)  #取的日期\nhour(D5)  #取得小時數\nminute(D5) #取得分鐘數\nsecond(D5) #取得秒數\n```\n\n:::success\n[1] 2019\n[1] 12\n[1] 16\n[1] 12\n[1] 1\n[1] 56\n:::\n:::danger\nyday()  #判斷日期為這一年得第幾天\nwday()   #判斷日期星期\nweek()  #判斷日期為這一年得第幾周\ndays_in_month()  #取得日期當月的最大天數\n:::\n```R=+\nyday(D5)  #判斷日期為這一年得第幾天\nwday(D5)   #判斷日期星期\nweek(D5)  #判斷日期為這一年得第幾周\ndays_in_month(D5)  #取得日期當月的最大天數\n```\n:::success\n[1] 350\n[1] 2\n[1] 50\nDec \n 31 \n:::\n\n## 時間的四捨五入與條件捨去、進位\n\n:::danger\nround_date(x, unit)  #將時間依據單位四捨五入\nfloor_date(x, unit)  #將時間依據單位條件捨去\nceiling_date(x, unit) #將時間依據單位條件進位\n**可使用單位Valid base units are second, minute, hour, day, week, month, bimonth(雙月), quarter(季度), season(季節), halfyear(半年) and year**\n:::\n\n```R=+\nround_date(D5, unit = \"day\")  #將時間四捨五入至天數\nfloor_date(D5, unit = \"day\")  #將時間條件捨去至天數\nceiling_date(D5, unit = \"day\") #將時間條件進位至天數\n```\n:::success\n[1] \"2019-12-17 UTC\"\n[1] \"2019-12-16 UTC\"\n[1] \"2019-12-17 UTC\"\n:::\n\n\n參考資料\n>[lubridate.tidyverse](https://lubridate.tidyverse.org/)\n>[Dates and times with lubridate : : CHEAT SHEET(速查表)](https://rawgit.com/rstudio/cheatsheets/master/lubridate.pdf)\n>[R for Data Science](https://r4ds.had.co.nz/dates-and-times.html)\n    [name=Garrett Grolemund、Hadley Wickham]","excerpt":"在R資料處理之中，時常會需要遇到時間格式的處理，實驗數據、股市資料、氣候資訊隨著時間不斷的流逝，各式資料也不斷的生成的情況下時間的判讀就顯得重要，多數時候取得的時間資料就是一長串的數字，如何讓程式讀取","anonymousSchool":false,"anonymousDepartment":false,"pinned":false,"forumId":"577f29b9-ef96-4e05-9e79-55e2a7d6e3db","replyId":null,"createdAt":"2019-12-18T11:58:57.750Z","updatedAt":"2019-12-18T11:59:52.558Z","commentCount":5,"likeCount":4,"tags":[],"topics":["R語言","RStudio","時間"],"supportedReactions":null,"withNickname":true,"reportReason":"","hiddenByAuthor":false,"meta":{"layout":"classic"},"forumName":"App","forumAlias":"app","school":"阿好伯","department":"a_hao_bo","replyTitle":null,"gender":"M","personaSubscriptable":true,"reactions":[{"id":"286f599c-f86a-4932-82f0-f5a06f1eca03","count":4}],"hidden":false,"customStyle":null,"isSuspiciousAccount":false,"layout":"classic","withImages":false,"withVideos":false,"media":[],"reportReasonText":"","mediaMeta":[],"postAvatar":""}